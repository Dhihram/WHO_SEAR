x <- x %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
BASELINE_SUS_CASES = first(CUM_SUS_CASES[EPI_WEEK == 1])  # Capture week 1 value
) %>%
ungroup()
View(x)
x <- x %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
# Override NEW_SUS_CASES for EPI_WEEK == 1
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
BASELINE_SUS_CASES = first(CUM_SUS_CASES[EPI_WEEK == 1])
) %>%
ungroup()
View(x)
x <- x %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
# Override for EPI_WEEK == 1
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
# Final override: no negatives allowed
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES)
) %>%
ungroup()
x
View(x)
View(data)
data %>% filter(is.na(ADM1, ADM2, ADM3))
data %>% filter(is.na(ADM1) & is.na(ADM2))
data %>% filter(ADM1 == "" & ADM2 == "")
setwd("C:/Users/dhihr/Downloads")
data <- read.csv('Weekly Data Entry Form(DATA)(4).csv')
data <- data %>% filter(COUNTRY %in% c('Bangladesh', 'Bhutan', 'India',
'Myanmar', 'Maldives', 'Nepal','Sri Lanka',
'Thailand', 'Timor-Leste'))
data <- data %>% filter(ADM1 == "" & ADM2 == "")
data
bangla <- data %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
# Override for EPI_WEEK == 1
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
# Final override: no negatives allowed
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES)
) %>%
ungroup()
View(bangla)
bangla <- data %>% filter(COUNTRY == 'Bangladesh')
bangla <- data %>% filter(COUNTRY == 'Bangladesh') %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
# Override for EPI_WEEK == 1
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
# Final override: no negatives allowed
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES)
) %>%
ungroup()
View(bangla)
View(data)
bangla <- data %>% filter(COUNTRY == 'Bangladesh') %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
#cases
NEW_CONF_CASES = CUM_SUS_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
) %>%
ungroup()
data <- data %>% filter(ADM1 == "" & ADM2 == "") %>%
mutate(
DATEREP = as.Date(DATEREP),
NEW_CONF_CASES = as.numeric(NEW_CONF_CASES),
NEW_SUS_DEATHS = as.numeric(NEW_SUS_DEATHS),
NEW_SUS_CASES = as.numeric(NEW_SUS_CASES),
CUM_SUS_CASES = as.numeric(CUM_SUS_CASES),
CUM_CONF_CASES = as.numeric(CUM_CONF_CASES),
CUM_SUS_DEATHS = as.numeric(CUM_SUS_DEATHS)
)
bangla <- data %>% filter(COUNTRY == 'Bangladesh') %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
#cases
NEW_CONF_CASES = CUM_SUS_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
) %>%
ungroup()
View(bangla)
bangla <- data %>% filter(COUNTRY == 'Bangladesh') %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0 | is.na(NEW_SUS_CASES) , 0, NEW_SUS_CASES),
#cases
NEW_CONF_CASES = CUM_SUS_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0 | is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
) %>%
ungroup()
View(bangla)
View(bangla)
bangla <- data %>% filter(COUNTRY == 'Bangladesh') %>%
mutate(
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0 | is.na(NEW_SUS_CASES) , 0, NEW_SUS_CASES),
#cases
NEW_CONF_CASES = CUM_SUS_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
) %>%
ungroup()
View(bangla)
bangla <- data %>%
filter(COUNTRY == 'Bangladesh') %>%
mutate(
# Replace NA in cumulative columns
CUM_SUS_CASES = replace_na(CUM_SUS_CASES, 0),
CUM_CONF_CASES = replace_na(CUM_CONF_CASES, 0)
) %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
# Suspected cases
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
# Confirmed cases
NEW_CONF_CASES = CUM_CONF_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES)
) %>%
ungroup()
View(bangla)
bangla <- data %>%
filter(COUNTRY == 'Bangladesh') %>%
mutate(
# Replace NA in cumulative columns
CUM_SUS_CASES = replace_na(CUM_SUS_CASES, 0),
CUM_CONF_CASES = replace_na(CUM_CONF_CASES, 0),
CUM_SUS_DEATHS = replace_na(CUM_SUS_DEATHS, 0)
) %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
# Suspected cases
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(EPI_WEEK == 1, CUM_SUS_CASES, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
# Confirmed cases
NEW_CONF_CASES = CUM_CONF_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(EPI_WEEK == 1, CUM_CONF_CASES, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
# Suspected deaths
NEW_SUS_DEATHS = CUM_SUS_DEATHS - lag(CUM_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(is.na(NEW_SUS_DEATHS), 0, NEW_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(EPI_WEEK == 1, CUM_SUS_DEATHS, NEW_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(NEW_SUS_DEATHS < 0, 0, NEW_SUS_DEATHS)
) %>%
ungroup()
View(bangla)
View(bangla)
x <- data %>% filter(COUNTRY == "Bangladesh" & ADM1 == "")
View(x)
data %>% filter(COUNTRY != "Bangladesh")
data <- data %>% filter(COUNTRY != "Bangladesh")
data <- rbind(data, bangla)
summary_data <- data %>%
mutate(
mwmr = MMWRweek(DATEREP),
MMWR_YEAR = mwmr$MMWRyear,
MMWR_WEEK = mwmr$MMWRweek,
MMWR_WEEK_START = MMWRweek2Date(MMWR_YEAR, MMWR_WEEK)
) %>%
group_by(MMWR_WEEK_START, COUNTRY) %>%
summarise(
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = unique(mwmr$MMWRweek),
EPI_YEAR = unique(mwmr$MMWRyear),
.groups = "drop"
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
View(summary_data)
View(data)
library(dplyr)
library(lubridate)
group_country <- summary_data %>%
group_by(MMWR_WEEK_START) %>%
summarise(
COUNTRY = "All Country",
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = MMWRweek(MMWR_WEEK_START)$MMWRweek,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRyear,
.groups = "drop"
) %>%
arrange(EPI_YEAR, EPI_WEEK)
group_country <- group_country %>%
distinct(MMWR_WEEK_START, .keep_all = TRUE)
View(group_country)
View(group_country)
summary_data <- rbind(group_country, summary_data)
View(summary_data)
# Step 2: Create complete grid of COUNTRY x WEEK
summary_data <- summary_data %>%
group_by(COUNTRY) %>%
complete(
MMWR_WEEK_START = seq(min(MMWR_WEEK_START), max(MMWR_WEEK_START), by = "1 week")
) %>%
ungroup() %>%
mutate(
NEW_CONF_CASES = replace_na(NEW_CONF_CASES, 0),
NEW_SUS_DEATHS = replace_na(NEW_SUS_DEATHS, 0),
NEW_SUS_CASES = replace_na(NEW_SUS_CASES, 0),
EPI_WEEK =  MMWRweek(MMWR_WEEK_START)$MMWRyear,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRweek
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
#save to database
setwd("C:/Users/dhihr/World Health Organization/SEARO_HIM - database/cholera")
write.csv(summary_data, 'data_cholera_16092025.csv', row.names = FALSE)
#save to github
setwd("~/GitHub/WHO_SEAR/Dat")
write.csv(summary_data, 'cholera_dat.csv', row.names = FALSE)
View(data)
View(bangla)
View(bangla)
setwd("C:/Users/dhihr/Downloads")
data <- read.csv('Weekly Data Entry Form(DATA)(4).csv')
data <- data %>% filter(COUNTRY %in% c('Bangladesh', 'Bhutan', 'India',
'Myanmar', 'Maldives', 'Nepal','Sri Lanka',
'Thailand', 'Timor-Leste'))
data <- data %>% filter(ADM1 == "" & ADM2 == "") %>%
mutate(
DATEREP = as.Date(DATEREP),
NEW_CONF_CASES = as.numeric(NEW_CONF_CASES),
NEW_SUS_DEATHS = as.numeric(NEW_SUS_DEATHS),
NEW_SUS_CASES = as.numeric(NEW_SUS_CASES),
CUM_SUS_CASES = as.numeric(CUM_SUS_CASES),
CUM_CONF_CASES = as.numeric(CUM_CONF_CASES),
CUM_SUS_DEATHS = as.numeric(CUM_SUS_DEATHS)
)
bangla <- data %>%
filter(COUNTRY == 'Bangladesh')
View(bangla)
bangla <- data %>%
filter(COUNTRY == 'Bangladesh') %>%
mutate(
# Replace NA in cumulative columns
CUM_SUS_CASES = replace_na(CUM_SUS_CASES, 0),
CUM_CONF_CASES = replace_na(CUM_CONF_CASES, 0),
CUM_SUS_DEATHS = replace_na(CUM_SUS_DEATHS, 0)
) %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
# Suspected cases
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
# Confirmed cases
NEW_CONF_CASES = CUM_CONF_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
# Suspected deaths
NEW_SUS_DEATHS = CUM_SUS_DEATHS - lag(CUM_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(is.na(NEW_SUS_DEATHS), 0, NEW_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(NEW_SUS_DEATHS < 0, 0, NEW_SUS_DEATHS)
) %>%
ungroup()
View(bangla)
data <- data %>% filter(COUNTRY != "Bangladesh")
data <- rbind(data, bangla)
summary_data <- data %>%
mutate(
mwmr = MMWRweek(DATEREP),
MMWR_YEAR = mwmr$MMWRyear,
MMWR_WEEK = mwmr$MMWRweek,
MMWR_WEEK_START = MMWRweek2Date(MMWR_YEAR, MMWR_WEEK)
) %>%
group_by(MMWR_WEEK_START, COUNTRY) %>%
summarise(
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = unique(mwmr$MMWRweek),
EPI_YEAR = unique(mwmr$MMWRyear),
.groups = "drop"
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
library(dplyr)
library(lubridate)
group_country <- summary_data %>%
group_by(MMWR_WEEK_START) %>%
summarise(
COUNTRY = "All Country",
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = MMWRweek(MMWR_WEEK_START)$MMWRweek,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRyear,
.groups = "drop"
) %>%
arrange(EPI_YEAR, EPI_WEEK)
View(group_country)
group_country <- group_country %>%
distinct(MMWR_WEEK_START, .keep_all = TRUE)
summary_data <- rbind(group_country, summary_data)
# Step 2: Create complete grid of COUNTRY x WEEK
summary_data <- summary_data %>%
group_by(COUNTRY) %>%
complete(
MMWR_WEEK_START = seq(min(MMWR_WEEK_START), max(MMWR_WEEK_START), by = "1 week")
) %>%
ungroup() %>%
mutate(
NEW_CONF_CASES = replace_na(NEW_CONF_CASES, 0),
NEW_SUS_DEATHS = replace_na(NEW_SUS_DEATHS, 0),
NEW_SUS_CASES = replace_na(NEW_SUS_CASES, 0),
EPI_WEEK =  MMWRweek(MMWR_WEEK_START)$MMWRyear,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRweek
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
#save to database
setwd("C:/Users/dhihr/World Health Organization/SEARO_HIM - database/cholera")
write.csv(summary_data, 'data_cholera_16092025.csv', row.names = FALSE)
#save to github
setwd("~/GitHub/WHO_SEAR/Dat")
write.csv(summary_data, 'cholera_dat.csv', row.names = FALSE)
View(bangla)
View(summary_data)
setwd("C:/Users/dhihr/Downloads")
data <- read.csv('Weekly Data Entry Form(DATA)(4).csv')
data <- data %>% filter(COUNTRY %in% c('Bangladesh', 'Bhutan', 'India',
'Myanmar', 'Maldives', 'Nepal','Sri Lanka',
'Thailand', 'Timor-Leste'))
data <- data %>% filter(ADM1 == "" & ADM2 == "") %>%
mutate(
DATEREP = as.Date(DATEREP),
NEW_CONF_CASES = as.numeric(NEW_CONF_CASES),
NEW_SUS_DEATHS = as.numeric(NEW_SUS_DEATHS),
NEW_SUS_CASES = as.numeric(NEW_SUS_CASES),
CUM_SUS_CASES = as.numeric(CUM_SUS_CASES),
CUM_CONF_CASES = as.numeric(CUM_CONF_CASES),
CUM_SUS_DEATHS = as.numeric(CUM_SUS_DEATHS)
)
x <- data %>% filter(COUNTRY == 'Thailand')
View(x)
data <- data %>% filter(COUNTRY != c("Bangladesh", "Thailand"))
setwd("C:/Users/dhihr/Downloads")
data <- read.csv('Weekly Data Entry Form(DATA)(4).csv')
data <- data %>% filter(COUNTRY %in% c('Bangladesh', 'Bhutan', 'India',
'Myanmar', 'Maldives', 'Nepal','Sri Lanka',
'Thailand', 'Timor-Leste'))
data <- data %>% filter(ADM1 == "" & ADM2 == "") %>%
mutate(
DATEREP = as.Date(DATEREP),
NEW_CONF_CASES = as.numeric(NEW_CONF_CASES),
NEW_SUS_DEATHS = as.numeric(NEW_SUS_DEATHS),
NEW_SUS_CASES = as.numeric(NEW_SUS_CASES),
CUM_SUS_CASES = as.numeric(CUM_SUS_CASES),
CUM_CONF_CASES = as.numeric(CUM_CONF_CASES),
CUM_SUS_DEATHS = as.numeric(CUM_SUS_DEATHS)
)
library(dplyr)
library(tidyr)  # for replace_na()
bangla <- data %>%
filter(COUNTRY == 'Bangladesh') %>%
mutate(
# Replace NA in cumulative columns
CUM_SUS_CASES = replace_na(CUM_SUS_CASES, 0),
CUM_CONF_CASES = replace_na(CUM_CONF_CASES, 0),
CUM_SUS_DEATHS = replace_na(CUM_SUS_DEATHS, 0)
) %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
# Suspected cases
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
# Confirmed cases
NEW_CONF_CASES = CUM_CONF_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
# Suspected deaths
NEW_SUS_DEATHS = CUM_SUS_DEATHS - lag(CUM_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(is.na(NEW_SUS_DEATHS), 0, NEW_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(NEW_SUS_DEATHS < 0, 0, NEW_SUS_DEATHS)
) %>%
ungroup()
thai <- data %>%
filter(COUNTRY == 'Thailand') %>%
mutate(
# Replace NA in cumulative columns
CUM_SUS_CASES = replace_na(CUM_SUS_CASES, 0),
CUM_CONF_CASES = replace_na(CUM_CONF_CASES, 0),
CUM_SUS_DEATHS = replace_na(CUM_SUS_DEATHS, 0)
) %>%
arrange(ADM1, ADM2, DATEREP) %>%
group_by(ADM1, ADM2) %>%
mutate(
# Suspected cases
NEW_SUS_CASES = CUM_SUS_CASES - lag(CUM_SUS_CASES),
NEW_SUS_CASES = ifelse(is.na(NEW_SUS_CASES), 0, NEW_SUS_CASES),
NEW_SUS_CASES = ifelse(NEW_SUS_CASES < 0, 0, NEW_SUS_CASES),
# Confirmed cases
NEW_CONF_CASES = CUM_CONF_CASES - lag(CUM_CONF_CASES),
NEW_CONF_CASES = ifelse(is.na(NEW_CONF_CASES), 0, NEW_CONF_CASES),
NEW_CONF_CASES = ifelse(NEW_CONF_CASES < 0, 0, NEW_CONF_CASES),
# Suspected deaths
NEW_SUS_DEATHS = CUM_SUS_DEATHS - lag(CUM_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(is.na(NEW_SUS_DEATHS), 0, NEW_SUS_DEATHS),
NEW_SUS_DEATHS = ifelse(NEW_SUS_DEATHS < 0, 0, NEW_SUS_DEATHS)
) %>%
ungroup()
data <- data %>%  filter(!COUNTRY %in% c("Bangladesh", "Thailand"))
data <- rbind(data, bangla, thai)
summary_data <- data %>%
mutate(
mwmr = MMWRweek(DATEREP),
MMWR_YEAR = mwmr$MMWRyear,
MMWR_WEEK = mwmr$MMWRweek,
MMWR_WEEK_START = MMWRweek2Date(MMWR_YEAR, MMWR_WEEK)
) %>%
group_by(MMWR_WEEK_START, COUNTRY) %>%
summarise(
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = unique(mwmr$MMWRweek),
EPI_YEAR = unique(mwmr$MMWRyear),
.groups = "drop"
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
library(dplyr)
library(lubridate)
group_country <- summary_data %>%
group_by(MMWR_WEEK_START) %>%
summarise(
COUNTRY = "All Country",
NEW_CONF_CASES = sum(NEW_CONF_CASES, na.rm = TRUE),
NEW_SUS_DEATHS = sum(NEW_SUS_DEATHS, na.rm = TRUE),
NEW_SUS_CASES = sum(NEW_SUS_CASES, na.rm = TRUE),
EPI_WEEK = MMWRweek(MMWR_WEEK_START)$MMWRweek,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRyear,
.groups = "drop"
) %>%
arrange(EPI_YEAR, EPI_WEEK)%>%
distinct(MMWR_WEEK_START, .keep_all = TRUE)
summary_data <- rbind(group_country, summary_data)
# Step 2: Create complete grid of COUNTRY x WEEK
summary_data <- summary_data %>%
group_by(COUNTRY) %>%
complete(
MMWR_WEEK_START = seq(min(MMWR_WEEK_START), max(MMWR_WEEK_START), by = "1 week")
) %>%
ungroup() %>%
mutate(
NEW_CONF_CASES = replace_na(NEW_CONF_CASES, 0),
NEW_SUS_DEATHS = replace_na(NEW_SUS_DEATHS, 0),
NEW_SUS_CASES = replace_na(NEW_SUS_CASES, 0),
EPI_WEEK =  MMWRweek(MMWR_WEEK_START)$MMWRyear,
EPI_YEAR = MMWRweek(MMWR_WEEK_START)$MMWRweek
) %>%
arrange(COUNTRY, MMWR_WEEK_START)
View(summary_data)
View(thai)
View(thai)
View(thai)
View(summary_data)
#save to database
setwd("C:/Users/dhihr/World Health Organization/SEARO_HIM - database/cholera")
write.csv(summary_data, 'data_cholera_16092025.csv', row.names = FALSE)
#save to github
setwd("~/GitHub/WHO_SEAR/Dat")
write.csv(summary_data, 'cholera_dat.csv', row.names = FALSE)
View(data)
x <- data %>% filter(COUNTRY == 'Nepal')
View(x)
View(data)
